class Node{
    int data;
    Node left,right;
    Node(int value){
        data=value;
        left=right=null;
    }
}

class BinaryTree{
    Node root;
    void inorder(Node node){
        if(node!=null){
            inorder(node.left);
            System.out.println(node.data+" ");
            inorder(node.right);
        }
    }

void preorder(Node node){
        if(node!=null){
            System.out.println(node.data+" ");
            preorder(node.left);
            preorder(node.right);
           
        }
    }
    void postorder(Node node){
        if(node!=null){
            System.out.println(node.data+" ");
            postorder(node.left);
            postorder(node.right);
           
        }
    }
}
public class Main{
    public static void main(String []args){
       BinaryTree tree=new BinaryTree();
       tree.root=new Node(1);
       tree.root.left=new Node(2);
       tree.root.right=new Node(3);
       tree.root.left.left=new Node(4);
       tree.root.left.right=new Node(5);
       
       System.out.println("\n inorder traversal");
       tree.inorder(tree.root);
       
       System.out.println("\n preorder traversal");
       tree.preorder(tree.root);
       
       System.out.println("\n postorder traversal");
       tree.postorder(tree.root);
    }
}













